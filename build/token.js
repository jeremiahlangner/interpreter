"use strict";const e={",":{type:"comma",literal:","},"[":{type:"lbracket",literal:"[",prefix:!0,infix:!0},"]":{type:"rbracket",literal:"]"},"(":{type:"lparen",literal:"(",prefix:!0},")":{type:"rparen",literal:")"},"=":{type:"equals",literal:"=",infix:!0},":":{type:"ref",literal:":",prefix:!0},"+":{type:"plus",literal:"+",infix:!0},"-":{type:"minus",literal:"-",infix:!0,prefix:!0},"<":{type:"lessthan",literal:"<",infix:!0},">":{type:"greaterthan",literal:">",infix:!0},">=":{type:"greaterthanorequal",literal:">=",infix:!0},"<=":{type:"lessthanorequal",literal:"<=",infix:!0},"*":{type:"multiply",literal:"*",infix:!0},"/":{type:"divide",literal:"/",infix:!0},"?":{type:"question",literal:"?",prefix:!0},$:{type:"root",literal:"$",prefix:!0}},t={and:{type:"and",literal:"and",infix:!0},not:{type:"not",literal:"not",prefix:!0,infix:!0},in:{type:"in",literal:"in",infix:!0},or:{type:"or",literal:"or",infix:!0},true:{type:"boolean",literal:"true",prefix:!0},false:{type:"boolean",literal:"false",prefix:!0},date:{type:"date",literal:"date",prefix:!0},find:{type:"find",literal:"find",prefix:!0}};export{t as KeywordMap,e as TokenMap};
