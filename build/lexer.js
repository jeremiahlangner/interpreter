"use strict";import{KeywordMap as p,TokenMap as e}from"./token";export default class d{constructor(){this.ch="";this.input="";this.position=0;this.readPosition=0}lex(t){this.ch="",this.input=t,this.position=0,this.readPosition=0,this.readChar()}next(){let t;this.skipWs();const s=this.peek();switch(!0){case this.ch==="":return;case this.ch==="'":case this.ch==='"':t={type:"string",literal:this.readString(this.ch),prefix:!0};break;case this.ch in e:if(`${this.ch}${s}`in e){const a=this.position;this.readChar(),t=e[this.input.slice(a,this.position+1)]}else t=e[this.ch];break;case(o(this.ch)&&!n(this.ch)):if(!(o(s)||r(s)||typeof s>"u"))break;const h=this.readIdentifier();t=p[h]||{type:"ident",literal:h,prefix:!0,infix:!0};break;case n(this.ch):if(!(n(s)||r(s)||s in e||typeof s>"u"))break;t={type:"number",literal:this.readNumber(),prefix:!0};break;default:console.error(`Syntax Error at position ${this.position} - Unhandled character '${this.ch}'.`);break}return this.readChar(),t}readChar(){this.readPosition>=this.input.length?this.ch="":this.ch=this.input[this.readPosition],this.position=this.readPosition,this.readPosition+=1}readIdentifier(){const t=this.position;for(;o(this.ch);)this.readChar();const s=this.input.slice(t,this.position);return this.position--,this.readPosition--,s}readNumber(){const t=this.position;for(;n(this.ch);)this.readChar();const s=this.input.slice(t,this.position);return this.position--,this.readPosition--,s}readString(t){const s=this.position;do this.readChar();while(this.ch!==t&&this.readPosition<this.input.length);return this.input.slice(s+1,this.ch===t?this.position:this.readPosition)}skipWs(){for(;r(this.ch);)this.readChar()}peek(){if(!(this.readPosition>=this.input.length))return this.input[this.readPosition]}}function r(i){return i===" "||i==="	"||i===`
`||i==="\r"}function o(i){return"a"<=i&&i<="z"||"A"<=i&&i<="Z"||"0"<=i&&i<="9"||i==="_"||i==="."}function n(i){return"0"<=i&&i<="9"||i==="."}
